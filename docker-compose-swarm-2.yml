version: "3.8"

services:
  frontend:
    image: luuhsantanafs/eichefeapp:1.0
    ports:
      - target: 3000
        published: 3000
        protocol: http
        mode: host
    networks:
      - eicheferede
      - lareanrede
    volumes:
      - eichefevolume:/app
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`larean.com.br`)" ## Dominio da aplicação
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.docker.network=lareanrede" ## Nome da rede interna
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.priority=1"

  db:
    image: postgres
    environment:
      POSTGRES_USER: eichefe
      POSTGRES_PASSWORD: Lucas102030
      POSTGRES_DB: eichefedb
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    networks:
      - eicheferede
      - lareanrede
    volumes:
      - eichefevolume:/var/lib/postgresql/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.db.rule=Host(`db.larean.com.br`)"
      - "traefik.http.routers.db.entrypoints=web"
      - "traefik.http.routers.db.service=db"
      - "traefik.http.routers.db.tls.certresolver=letsencryptresolver"
      - "traefik.http.services.db.loadbalancer.server.port=5432"
      - "traefik.docker.network=lareanrede"
      - "traefik.http.routers.frontend.entrypoints=websecure"

  eichefeapizap:
    image: luuhsantanafs/eichefeapizap:1.0
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    networks:
      - eicheferede
      - lareanrede
    volumes:
      - eichefevolume:/app
    depends_on:
      - db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.eichefeapizap.rule=Host(`apizap.larean.com.br`)"
      - "traefik.http.routers.eichefeapizap.entrypoints=web"
      - "traefik.http.routers.eichefeapizap.service=eichefeapizap"
      - "traefik.http.routers.eichefeapizap.tls.certresolver=letsencryptresolver"
      - "traefik.http.services.eichefeapizap.loadbalancer.server.port=8080"
      - "traefik.docker.network=lareanrede"
      - "traefik.http.routers.frontend.entrypoints=websecure"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - target: 15672
        published: 15672
        protocol: tcp
        mode: host
      - target: 5672
        published: 5672
        protocol: tcp
        mode: host
    networks:
      - eicheferede
      - lareanrede
    environment:
      - RABBITMQ_DEFAULT_USER=luuhsantanafs
      - RABBITMQ_DEFAULT_PASS=Lucas102030
    volumes:
      - eichefevolume:/var/lib/rabbitmq
    depends_on:
      - db
      - eichefeapizap
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.larean.com.br`)"
      - "traefik.http.routers.rabbitmq.entrypoints=web"
      - "traefik.http.routers.rabbitmq.service=rabbitmq"
      - "traefik.http.routers.rabbitmq.tls.certresolver=letsencryptresolver"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
      - "traefik.docker.network=lareanrede"
      - "traefik.http.routers.frontend.entrypoints=websecure"

networks:
  eicheferede:
    driver: overlay
    external: true
  lareanrede:
    driver: overlay
    external: true

volumes:
  eichefevolume:
    driver: local
